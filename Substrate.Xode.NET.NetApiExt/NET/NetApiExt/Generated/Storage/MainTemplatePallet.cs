//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Substrate.Xode.NET.NetApiExt.Generated.Storage
{
    
    
    /// <summary>
    /// >> TemplatePalletStorage
    /// </summary>
    public sealed class TemplatePalletStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        /// <summary>
        /// >> TemplatePalletStorage Constructor
        /// </summary>
        public TemplatePalletStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("TemplatePallet", "Something"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.U32)));
        }
        
        /// <summary>
        /// >> SomethingParams
        /// </summary>
        public static string SomethingParams()
        {
            return RequestGenerator.GetStorage("TemplatePallet", "Something", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> SomethingDefault
        /// Default value as hex string
        /// </summary>
        public static string SomethingDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> Something
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U32> Something(string blockhash, CancellationToken token)
        {
            string parameters = TemplatePalletStorage.SomethingParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U32>(parameters, blockhash, token);
            return result;
        }
    }
    
    /// <summary>
    /// >> TemplatePalletCalls
    /// </summary>
    public sealed class TemplatePalletCalls
    {
        
        /// <summary>
        /// >> do_something
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method DoSomething(Substrate.NetApi.Model.Types.Primitive.U32 something)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(something.Encode());
            return new Method(40, "TemplatePallet", 0, "do_something", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> cause_error
        /// Contains one variant per dispatchable that can be called by an extrinsic.
        /// </summary>
        public static Method CauseError()
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            return new Method(40, "TemplatePallet", 1, "cause_error", byteArray.ToArray());
        }
    }
    
    /// <summary>
    /// >> TemplatePalletConstants
    /// </summary>
    public sealed class TemplatePalletConstants
    {
    }
    
    /// <summary>
    /// >> TemplatePalletErrors
    /// </summary>
    public enum TemplatePalletErrors
    {
        
        /// <summary>
        /// >> NoneValue
        /// Error names should be descriptive.
        /// </summary>
        NoneValue,
        
        /// <summary>
        /// >> StorageOverflow
        /// Errors should have helpful documentation associated with them.
        /// </summary>
        StorageOverflow,
    }
}
